#!/bin/bash
set -euo pipefail

for token in $@; do
    if [ "$token" = "-h" ] || [ "$token" = "--help" ]; then
        echo description: verify that objects with name and size from log exist in remote 1>&2
        echo 1>&2
        echo usage: backup-verify 1>&2
        exit 1
    fi
done

if [ -n "${BACKUP_S3:-}" ]; then
    prefix=$BACKUP_S3/
    remote=$(libaws s3-ls $prefix | awk '{print $3, $4}')
    fail=n
    cd $BACKUP_ROOT/.backup
    git log "$@" | grep '\.lz4\.enc' | while read -r name hash size; do
        if ! echo "$remote" | grep "$size $name" &>/dev/null; then
            echo error: s3 remote missing object from log $prefix$name $size
            fail=y
        fi
    done
    if [ $fail = y ]; then
        exit 1
    fi
    echo ok s3
fi

if [ -n "${BACKUP_R2:-}" ]; then
    prefix=$BACKUP_R2/
    remote=$(r2 ls $prefix | awk '{print $3, $4}')
    fail=n
    cd $BACKUP_ROOT/.backup
    git log "$@" | grep '\.lz4\.enc' | while read -r name hash size; do
        if ! echo "$remote" | grep "$size $name" &>/dev/null; then
            echo error: r2 remote missing object from log $prefix$name $size
            fail=y
        fi
        if [ -n "${BACKUP_R2_VERIFY:-}" ]; then
            checksum=$(r2 cp ${prefix}${name} - | -backup-blake2b)
            if [ "$checksum" = "$hash" ]; then
                echo ok $name
            else
                echo fatal: checksum mismatch for $name
                fail=y
            fi
        fi
    done
    if [ $fail = y ]; then
        exit 1
    fi
    echo ok r2
fi

if [ -n "${BACKUP_FS:-}" ]; then
    prefix=$BACKUP_FS/
    remote=$(ls -l $prefix | awk '{print $5, $9}')
    fail=n
    cd $BACKUP_ROOT/.backup
    git log "$@" | grep '\.lz4\.enc' | while read -r name hash size; do
        if ! echo "$remote" | grep "$size $name" &>/dev/null; then
            echo error: fs remote missing object from log $prefix$name $size
            fail=y
        fi
        checksum=$(cat ${prefix}/${name} | -backup-blake2b)
        if [ "$checksum" = "$hash" ]; then
            echo ok $name
        else
            echo fatal: fs checksum mismatch for $name
            fail=y
        fi
    done
    if [ $fail = y ]; then
        exit 1
    fi
    echo ok fs
fi
