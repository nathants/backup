#!/bin/bash
set -euo pipefail

if [ "${BACKUP_SUDO:-no}" = "yes" ]; then
    SUDO="sudo --preserve-env --"
else
    if [ "$BACKUP_ROOT" = "/" ]; then
        echo 'fatal: BACKUP_ROOT = "/" but BACKUP_SUDO != "yes"'
        exit 1
    fi
    SUDO=
fi

for token in $@; do
    if [ "$token" = "-h" ] || [ "$token" = "--help" ]; then
        echo description: scan the filesystem for changes 1>&2
        echo 1>&2
        echo usage: backup-add 1>&2
        exit 1
    fi
done

dependencies='
    awk
    aws
    bash
    cat
    git
    git-remote-aws
    gpg
    grep
    libaws
    lz4
    python3
'

for dep in $dependencies; do
    if ! which $dep &>/dev/null; then
        echo "fatal: dependency '$dep' not found on \$PATH"
        exit 1
    fi
done

# initialize new backup
if [ ! -d $BACKUP_ROOT/.backup/.git ]; then
    $SUDO mkdir -p $BACKUP_ROOT/.backup
    if [ -n "$SUDO" ]; then
        user=$(whoami)
        $SUDO chown -R $user:$user $BACKUP_ROOT/.backup
    fi
    cd $BACKUP_ROOT/.backup
    git init

    # turn off signing of git commits so that global git signing
    # config doesnt interfere with gpg defaults
    git config user.signingkey ''
    git config gpg.format openpgp
    git config commit.gpgsign false

    echo '^\./\.backup/' >> ignore
    if [ "$BACKUP_ROOT" = "/" ]; then
        echo '^\./dev/' >> ignore
        echo '^\./proc/' >> ignore
        echo '^\./run/' >> ignore
        echo '^\./sys/' >> ignore
        echo '^\./tmp/' >> ignore
    fi

    if [ ! -f ~/.git-remote-aws/secretkey ] || [ ! -f ~/.git-remote-aws/publickey ]; then
        echo fatal: keys missing, run this: git-remote-aws --keygen ~/.git-remote-aws/publickey ~/.git-remote-aws/secretkey
        exit 1
    fi

    touch index
    cat ~/.git-remote-aws/publickey > .publickeys
    git add index ignore .publickeys
    git commit -m 'init'
    remote="$BACKUP_GIT"
    git remote add origin $remote
    export ensure=y # git-remote-aws create dynamodb table if needed
    git push -u origin master
    echo "init backup of '$BACKUP_ROOT' and push to remote '$remote'"
fi

cd $BACKUP_ROOT/.backup

backup-reset

$SUDO -backup-update-index

git add index

size=$(-backup-size)

echo new data size: $size
