#!/usr/bin/env python3
import re
import os
import sys
import subprocess

check_call = lambda *a: subprocess.check_call(' '.join(map(str, a)), shell=True, executable='/bin/bash')
check_output = lambda *a: subprocess.check_output(' '.join(map(str, a)), shell=True, executable='/bin/bash').decode('utf-8').strip()

if '-h' in sys.argv or '--help' in sys.argv or len(sys.argv) not in [2, 3]:
    print('description: search for files in the index by REGEX at REVISION\n', file=sys.stderr)
    print('usage: backup-find REGEX [REVISION]', file=sys.stderr)
    sys.exit(1)

regex = re.compile(sys.argv[1]).search

revision = 'HEAD'
if len(sys.argv) == 3:
    revision = sys.argv[2]

backup_dir = '{BACKUP_ROOT}/.backup'.format(**os.environ)

if not os.path.isdir(backup_dir):
    remote = "gcrypt::rclone://{BACKUP_RCLONE_REMOTE}:{BACKUP_DESTINATION}/git".format(**os.environ)
    print(f'cloning remote {remote} to {backup_dir}', file=sys.stderr)
    check_call(f'git clone {remote} {backup_dir}')

os.chdir(backup_dir)
for line in check_output(f'git show {revision}:index').splitlines():
    path = line.split('\t')[0]
    if regex(path):
        print(line)
